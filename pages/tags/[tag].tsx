import Head from "next/head";
import { GetStaticPaths, GetStaticProps } from "next";
import {
  concat,
  contains,
  filter,
  flatten,
  map,
} from "ramda";
import { ConstellationCard } from "../../src/card-data";

import Card from "../../src/Card";

const styles = require("../../styles/CardPage.module.css");

export default function OneCard({
  tag,
  cards
}: {
  tag: string;
  cards: ConstellationCard[];
}) {
  return (
    <div className={styles.container}>
      <Head>
        <title>Cards tagged {tag}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        {map(
          (card) => (
            <Card card={card} />
          ),
          cards
        )}
      </main>

      <footer>
        <a href="/">Home</a>
      </footer>
    </div>
  );
}

export const getStaticPaths: GetStaticPaths = async (context) => {
  const cards = await import("../../src/card-data");
  const tags = flatten(map(card => concat(card.front.tags, card.back.tags), cards.cards))
  const paths = map((tag) => ({ params: { tag } }), tags);

  return {
    paths,
    fallback: false
  };
};

export const getStaticProps: GetStaticProps = async (context) => {
  const cards = await import("../../src/card-data");
  const tag = context.params["tag"];

  const matchingCards = filter(
    (card) => contains(tag, concat(card.front.tags, card.back.tags)),
    cards.cards
  );

  return {
    props: {
      tag,
      cards: matchingCards
    },
    notFound: matchingCards.length === 0
  };
};
